{
  "version": 3,
  "sources": ["../../../app/routes/smtp._index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/smtp._index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/smtp._index.tsx\");\n  import.meta.hot.lastModified = \"1754585347715.108\";\n}\n// REMIX HMR END\n\nimport { json } from '@remix-run/node';\nimport { Form, useActionData, useLoaderData, useNavigation } from '@remix-run/react';\nimport { requireAuth } from '~/lib/auth.server';\nimport { supabase } from '~/lib/supabase.server';\nimport { Sidebar } from '~/components/layout/sidebar';\nimport { Header } from '~/components/layout/header';\nimport { Button } from '~/components/ui/button';\nimport { Input } from '~/components/ui/input';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '~/components/ui/card';\nimport { Plus, Server, Trash2, Settings, CheckCircle, XCircle } from 'lucide-react';\nexport async function loader({\n  request\n}) {\n  const user = await requireAuth(request);\n  const {\n    data: smtpConfigs,\n    error\n  } = await supabase.from('smtp_configs').select('*').eq('user_id', user.id).order('created_at', {\n    ascending: false\n  });\n  if (error) {\n    console.error('SMTP configs fetch error:', error);\n    return json({\n      user,\n      smtpConfigs: [],\n      error: 'Failed to load SMTP configurations'\n    });\n  }\n  return json({\n    user,\n    smtpConfigs\n  });\n}\nexport async function action({\n  request\n}) {\n  const user = await requireAuth(request);\n  const formData = await request.formData();\n  const action = formData.get('_action');\n  if (action === 'create') {\n    const name = formData.get('name');\n    const host = formData.get('host');\n    const port = parseInt(formData.get('port'));\n    const username = formData.get('username');\n    const password = formData.get('password');\n    const secure = formData.get('secure') === 'on';\n    if (!name || !host || !port || !username || !password) {\n      return json({\n        error: 'All fields are required'\n      }, {\n        status: 400\n      });\n    }\n    if (port < 1 || port > 65535) {\n      return json({\n        error: 'Port must be between 1 and 65535'\n      }, {\n        status: 400\n      });\n    }\n    const {\n      error\n    } = await supabase.from('smtp_configs').insert({\n      user_id: user.id,\n      name,\n      host,\n      port,\n      username,\n      password,\n      secure,\n      is_active: true\n    });\n    if (error) {\n      console.error('SMTP config creation error:', error);\n      return json({\n        error: 'Failed to create SMTP configuration'\n      }, {\n        status: 500\n      });\n    }\n    return json({\n      success: 'SMTP configuration added successfully'\n    });\n  }\n  if (action === 'delete') {\n    const configId = formData.get('configId');\n    if (!configId) {\n      return json({\n        error: 'Configuration ID is required'\n      }, {\n        status: 400\n      });\n    }\n    const {\n      error\n    } = await supabase.from('smtp_configs').delete().eq('id', configId).eq('user_id', user.id);\n    if (error) {\n      console.error('SMTP config deletion error:', error);\n      return json({\n        error: 'Failed to delete SMTP configuration'\n      }, {\n        status: 500\n      });\n    }\n    return json({\n      success: 'SMTP configuration deleted successfully'\n    });\n  }\n  if (action === 'toggle') {\n    const configId = formData.get('configId');\n    const isActive = formData.get('isActive') === 'true';\n    if (!configId) {\n      return json({\n        error: 'Configuration ID is required'\n      }, {\n        status: 400\n      });\n    }\n    const {\n      error\n    } = await supabase.from('smtp_configs').update({\n      is_active: !isActive,\n      updated_at: new Date().toISOString()\n    }).eq('id', configId).eq('user_id', user.id);\n    if (error) {\n      console.error('SMTP config toggle error:', error);\n      return json({\n        error: 'Failed to update SMTP configuration'\n      }, {\n        status: 500\n      });\n    }\n    return json({\n      success: `SMTP configuration ${!isActive ? 'activated' : 'deactivated'} successfully`\n    });\n  }\n  return json({\n    error: 'Invalid action'\n  }, {\n    status: 400\n  });\n}\nconst commonSMTPProviders = [{\n  name: 'Gmail',\n  host: 'smtp.gmail.com',\n  port: 587,\n  secure: true,\n  instructions: 'Use your Gmail address and App Password (not regular password)'\n}, {\n  name: 'Outlook/Hotmail',\n  host: 'smtp-mail.outlook.com',\n  port: 587,\n  secure: true,\n  instructions: 'Use your Outlook email and password'\n}, {\n  name: 'Yahoo Mail',\n  host: 'smtp.mail.yahoo.com',\n  port: 587,\n  secure: true,\n  instructions: 'Use your Yahoo email and App Password'\n}, {\n  name: 'Custom SMTP',\n  host: 'mail.yourdomain.com',\n  port: 587,\n  secure: true,\n  instructions: 'Contact your hosting provider for SMTP details'\n}];\nexport default function SMTPConfigs() {\n  _s();\n  const {\n    user,\n    smtpConfigs,\n    error\n  } = useLoaderData();\n  const actionData = useActionData();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  return <div className=\"flex h-screen bg-gray-50\">\n      <Sidebar />\n      \n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        <Header user={user} />\n        \n        <main className=\"flex-1 overflow-y-auto p-6\">\n          <div className=\"max-w-6xl mx-auto\">\n            <div className=\"mb-8\">\n              <h2 className=\"text-3xl font-bold text-gray-900\">SMTP Configuration</h2>\n              <p className=\"text-gray-600 mt-2\">\n                Configure your SMTP servers to send emails through your own mail servers.\n              </p>\n            </div>\n\n            {error && <Card className=\"mb-6 border-red-200 bg-red-50\">\n                <CardContent className=\"p-4\">\n                  <p className=\"text-red-800\">{error}</p>\n                </CardContent>\n              </Card>}\n\n            {/* Common SMTP Providers */}\n            <Card className=\"mb-8\">\n              <CardHeader>\n                <CardTitle>Popular SMTP Providers</CardTitle>\n                <CardDescription>\n                  Quick setup guides for common email providers\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  {commonSMTPProviders.map((provider, index) => <div key={index} className=\"border rounded-lg p-4 hover:bg-gray-50 transition-colors\">\n                      <h4 className=\"font-medium text-gray-900 mb-2\">{provider.name}</h4>\n                      <div className=\"text-sm text-gray-600 space-y-1\">\n                        <p><strong>Host:</strong> {provider.host}</p>\n                        <p><strong>Port:</strong> {provider.port}</p>\n                        <p><strong>Security:</strong> {provider.secure ? 'SSL/TLS' : 'None'}</p>\n                        <p className=\"text-xs mt-2 text-blue-600\">{provider.instructions}</p>\n                      </div>\n                    </div>)}\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Add New SMTP Config */}\n            <Card className=\"mb-8\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <Plus className=\"h-5 w-5 mr-2\" />\n                  Add SMTP Configuration\n                </CardTitle>\n                <CardDescription>\n                  Connect your SMTP server to send emails\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <Form method=\"post\" className=\"space-y-6\">\n                  <input type=\"hidden\" name=\"_action\" value=\"create\" />\n                  \n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Configuration Name *\n                      </label>\n                      <Input name=\"name\" placeholder=\"e.g., Gmail SMTP\" required className=\"w-full\" />\n                      <p className=\"text-xs text-gray-500 mt-1\">\n                        A friendly name to identify this configuration\n                      </p>\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        SMTP Host *\n                      </label>\n                      <Input name=\"host\" placeholder=\"e.g., smtp.gmail.com\" required className=\"w-full\" />\n                      <p className=\"text-xs text-gray-500 mt-1\">\n                        Your SMTP server hostname\n                      </p>\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Port *\n                      </label>\n                      <Input name=\"port\" type=\"number\" placeholder=\"587\" min=\"1\" max=\"65535\" defaultValue=\"587\" required className=\"w-full\" />\n                      <p className=\"text-xs text-gray-500 mt-1\">\n                        Common ports: 587 (TLS), 465 (SSL), 25 (unsecured)\n                      </p>\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Username *\n                      </label>\n                      <Input name=\"username\" placeholder=\"your-email@gmail.com\" required className=\"w-full\" />\n                      <p className=\"text-xs text-gray-500 mt-1\">\n                        Usually your email address\n                      </p>\n                    </div>\n\n                    <div className=\"md:col-span-2\">\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Password *\n                      </label>\n                      <Input name=\"password\" type=\"password\" placeholder=\"Your password or app password\" required className=\"w-full\" />\n                      <p className=\"text-xs text-gray-500 mt-1\">\n                        For Gmail, use an App Password instead of your regular password\n                      </p>\n                    </div>\n\n                    <div className=\"md:col-span-2\">\n                      <div className=\"flex items-center\">\n                        <input type=\"checkbox\" name=\"secure\" id=\"secure\" defaultChecked className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\" />\n                        <label htmlFor=\"secure\" className=\"ml-2 text-sm text-gray-700\">\n                          Use SSL/TLS encryption (recommended)\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n\n                  {actionData?.error && <div className=\"text-red-600 text-sm bg-red-50 p-3 rounded-md\">\n                      {actionData.error}\n                    </div>}\n\n                  {actionData?.success && <div className=\"text-green-600 text-sm bg-green-50 p-3 rounded-md\">\n                      {actionData.success}\n                    </div>}\n\n                  <Button type=\"submit\" disabled={isSubmitting} className=\"w-full md:w-auto\">\n                    {isSubmitting ? 'Adding...' : 'Add SMTP Configuration'}\n                  </Button>\n                </Form>\n              </CardContent>\n            </Card>\n\n            {/* Existing SMTP Configs */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-xl font-semibold text-gray-900 flex items-center\">\n                <Settings className=\"h-5 w-5 mr-2\" />\n                Your SMTP Configurations\n              </h3>\n              \n              {smtpConfigs.length === 0 ? <Card>\n                  <CardContent className=\"text-center py-12\">\n                    <Server className=\"h-16 w-16 mx-auto mb-4 text-gray-300\" />\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n                      No SMTP configurations yet\n                    </h3>\n                    <p className=\"text-gray-600 mb-6\">\n                      Add your first SMTP configuration above to start sending emails.\n                    </p>\n                  </CardContent>\n                </Card> : <div className=\"grid gap-6\">\n                  {smtpConfigs.map(config => <Card key={config.id} className=\"hover:shadow-md transition-shadow\">\n                      <CardContent className=\"p-6\">\n                        <div className=\"flex items-start justify-between\">\n                          <div className=\"flex items-start space-x-4\">\n                            <div className={`p-3 rounded-lg ${config.is_active ? 'bg-green-50' : 'bg-gray-50'}`}>\n                              {config.is_active ? <CheckCircle className=\"h-6 w-6 text-green-600\" /> : <XCircle className=\"h-6 w-6 text-gray-400\" />}\n                            </div>\n                            \n                            <div className=\"flex-1\">\n                              <h4 className=\"font-semibold text-gray-900 text-lg\">\n                                {config.name}\n                              </h4>\n                              <div className=\"mt-2 space-y-1 text-sm text-gray-600\">\n                                <p><strong>Host:</strong> {config.host}:{config.port}</p>\n                                <p><strong>Username:</strong> {config.username}</p>\n                                <p><strong>Security:</strong> {config.secure ? 'SSL/TLS Enabled' : 'No Encryption'}</p>\n                                <p><strong>Created:</strong> {new Date(config.created_at).toLocaleDateString()}</p>\n                              </div>\n                              \n                              <div className=\"flex items-center mt-3 space-x-3\">\n                                <span className={`px-3 py-1 text-xs font-medium rounded-full ${config.is_active ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'}`}>\n                                  {config.is_active ? 'Active' : 'Inactive'}\n                                </span>\n                                \n                                {config.secure && <span className=\"px-3 py-1 text-xs font-medium rounded-full bg-blue-100 text-blue-800\">\n                                    Encrypted\n                                  </span>}\n                              </div>\n                            </div>\n                          </div>\n                          \n                          <div className=\"flex space-x-2\">\n                            <Form method=\"post\" className=\"inline\">\n                              <input type=\"hidden\" name=\"_action\" value=\"toggle\" />\n                              <input type=\"hidden\" name=\"configId\" value={config.id} />\n                              <input type=\"hidden\" name=\"isActive\" value={config.is_active} />\n                              <Button type=\"submit\" variant=\"outline\" size=\"sm\" disabled={isSubmitting}>\n                                {config.is_active ? 'Deactivate' : 'Activate'}\n                              </Button>\n                            </Form>\n                            \n                            <Form method=\"post\" className=\"inline\">\n                              <input type=\"hidden\" name=\"_action\" value=\"delete\" />\n                              <input type=\"hidden\" name=\"configId\" value={config.id} />\n                              <Button type=\"submit\" variant=\"outline\" size=\"sm\" className=\"text-red-600 hover:text-red-700 hover:border-red-300\" disabled={isSubmitting} onClick={e => {\n                          if (!confirm('Are you sure you want to delete this SMTP configuration?')) {\n                            e.preventDefault();\n                          }\n                        }}>\n                                <Trash2 className=\"h-4 w-4\" />\n                              </Button>\n                            </Form>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>)}\n                </div>}\n            </div>\n          </div>\n        </main>\n      </div>\n    </div>;\n}\n_s(SMTPConfigs, \"0V1nNkBbX+i4Qo+9LzkL7aigntM=\", false, function () {\n  return [useLoaderData, useActionData, useNavigation];\n});\n_c = SMTPConfigs;\nvar _c;\n$RefreshReg$(_c, \"SMTPConfigs\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
