{
  "version": 3,
  "sources": ["../../../app/routes/lists._index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/lists._index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/lists._index.tsx\");\n  import.meta.hot.lastModified = \"1754586020267.519\";\n}\n// REMIX HMR END\n\nimport { json } from '@remix-run/node';\nimport { Link, useLoaderData } from '@remix-run/react';\nimport { requireAuth } from '~/lib/auth.server';\nimport { supabase } from '~/lib/supabase.server';\nimport { Sidebar } from '~/components/layout/sidebar';\nimport { Header } from '~/components/layout/header';\nimport { Button } from '~/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '~/components/ui/card';\nimport { Plus, List, Users, Calendar, MoreHorizontal } from 'lucide-react';\nexport async function loader({\n  request\n}) {\n  const user = await requireAuth(request);\n  const {\n    data: lists,\n    error\n  } = await supabase.from('lists_with_counts').select('*').eq('user_id', user.id).order('created_at', {\n    ascending: false\n  });\n  if (error) {\n    console.error('Lists fetch error:', error);\n    return json({\n      user,\n      lists: [],\n      error: 'Failed to load lists'\n    });\n  }\n  return json({\n    user,\n    lists\n  });\n}\nexport default function Lists() {\n  _s();\n  const {\n    user,\n    lists,\n    error\n  } = useLoaderData();\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n  return <div className=\"flex h-screen bg-gray-50\">\n      <Sidebar />\n      \n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        <Header user={user} />\n        \n        <main className=\"flex-1 overflow-y-auto p-6\">\n          <div className=\"max-w-7xl mx-auto\">\n            <div className=\"flex items-center justify-between mb-8\">\n              <div>\n                <h2 className=\"text-3xl font-bold text-gray-900\">Lists</h2>\n                <p className=\"text-gray-600 mt-2\">\n                  Organize your subscribers into targeted lists.\n                </p>\n              </div>\n              \n              <Link to=\"/lists/new\">\n                <Button>\n                  <Plus className=\"h-4 w-4 mr-2\" />\n                  Create List\n                </Button>\n              </Link>\n            </div>\n\n            {error && <Card className=\"mb-6 border-red-200 bg-red-50\">\n                <CardContent className=\"p-4\">\n                  <p className=\"text-red-800\">{error}</p>\n                </CardContent>\n              </Card>}\n\n            {lists.length === 0 ? <Card>\n                <CardContent className=\"text-center py-12\">\n                  <List className=\"h-16 w-16 mx-auto mb-4 text-gray-300\" />\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n                    No lists yet\n                  </h3>\n                  <p className=\"text-gray-600 mb-6\">\n                    Create your first list to start organizing your subscribers.\n                  </p>\n                  <Link to=\"/lists/new\">\n                    <Button>\n                      <Plus className=\"h-4 w-4 mr-2\" />\n                      Create Your First List\n                    </Button>\n                  </Link>\n                </CardContent>\n              </Card> : <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {lists.map(list => <Card key={list.id} className=\"hover:shadow-lg transition-shadow\">\n                    <CardHeader>\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center space-x-3\">\n                          <div className=\"w-4 h-4 rounded-full\" style={{\n                      backgroundColor: list.color\n                    }} />\n                          <CardTitle className=\"text-lg\">{list.name}</CardTitle>\n                        </div>\n                        <Button variant=\"ghost\" size=\"sm\">\n                          <MoreHorizontal className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                      {list.description && <CardDescription>{list.description}</CardDescription>}\n                    </CardHeader>\n                    \n                    <CardContent>\n                      <div className=\"space-y-4\">\n                        <div className=\"flex items-center justify-between text-sm\">\n                          <div className=\"flex items-center text-gray-600\">\n                            <Users className=\"h-4 w-4 mr-2\" />\n                            <span>{list.subscribed_members || 0} subscribers</span>\n                          </div>\n                          <div className=\"flex items-center text-gray-600\">\n                            <Calendar className=\"h-4 w-4 mr-2\" />\n                            <span>{formatDate(list.created_at)}</span>\n                          </div>\n                        </div>\n                        \n                        <div className=\"flex space-x-2\">\n                          <Link to={`/lists/${list.id}`} className=\"flex-1\">\n                            <Button variant=\"outline\" size=\"sm\" className=\"w-full\">\n                              View\n                            </Button>\n                          </Link>\n                          <Link to={`/lists/${list.id}/edit`} className=\"flex-1\">\n                            <Button variant=\"outline\" size=\"sm\" className=\"w-full\">\n                              Edit\n                            </Button>\n                          </Link>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>)}\n              </div>}\n          </div>\n        </main>\n      </div>\n    </div>;\n}\n_s(Lists, \"lQfvLt1lY/lzli0tPBFmMM9ITpQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = Lists;\nvar _c;\n$RefreshReg$(_c, \"Lists\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
