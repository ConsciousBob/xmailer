{
  "version": 3,
  "sources": ["../../../app/routes/lists.new.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/lists.new.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/lists.new.tsx\");\n  import.meta.hot.lastModified = \"1754586020267.7917\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from '@remix-run/node';\nimport { Form, useActionData, useLoaderData, useNavigation, Link } from '@remix-run/react';\nimport { requireAuth } from '~/lib/auth.server';\nimport { supabase } from '~/lib/supabase.server';\nimport { Sidebar } from '~/components/layout/sidebar';\nimport { Header } from '~/components/layout/header';\nimport { Button } from '~/components/ui/button';\nimport { Input } from '~/components/ui/input';\nimport { Textarea } from '~/components/ui/textarea';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '~/components/ui/card';\nimport { ArrowLeft, List } from 'lucide-react';\nexport async function loader({\n  request\n}) {\n  const user = await requireAuth(request);\n  return json({\n    user\n  });\n}\nexport async function action({\n  request\n}) {\n  const user = await requireAuth(request);\n  const formData = await request.formData();\n  const name = formData.get('name');\n  const description = formData.get('description');\n  const color = formData.get('color');\n  if (!name) {\n    return json({\n      error: 'List name is required'\n    }, {\n      status: 400\n    });\n  }\n\n  // Check if list name already exists for this user\n  const {\n    data: existingList\n  } = await supabase.from('lists').select('id').eq('user_id', user.id).eq('name', name).single();\n  if (existingList) {\n    return json({\n      error: 'A list with this name already exists'\n    }, {\n      status: 400\n    });\n  }\n\n  // Create list\n  const {\n    error\n  } = await supabase.from('lists').insert({\n    user_id: user.id,\n    name,\n    description: description || '',\n    color: color || '#3B82F6',\n    is_active: true\n  });\n  if (error) {\n    console.error('List creation error:', error);\n    return json({\n      error: 'Failed to create list'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/lists');\n}\nconst colorOptions = [{\n  name: 'Blue',\n  value: '#3B82F6'\n}, {\n  name: 'Green',\n  value: '#10B981'\n}, {\n  name: 'Purple',\n  value: '#8B5CF6'\n}, {\n  name: 'Red',\n  value: '#EF4444'\n}, {\n  name: 'Orange',\n  value: '#F59E0B'\n}, {\n  name: 'Pink',\n  value: '#EC4899'\n}, {\n  name: 'Indigo',\n  value: '#6366F1'\n}, {\n  name: 'Teal',\n  value: '#14B8A6'\n}];\nexport default function NewList() {\n  _s();\n  const {\n    user\n  } = useLoaderData();\n  const actionData = useActionData();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  return <div className=\"flex h-screen bg-gray-50\">\n      <Sidebar />\n      \n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        <Header user={user} />\n        \n        <main className=\"flex-1 overflow-y-auto p-6\">\n          <div className=\"max-w-2xl mx-auto\">\n            <div className=\"flex items-center mb-8\">\n              <Link to=\"/lists\" className=\"mr-4\">\n                <Button variant=\"outline\" size=\"sm\">\n                  <ArrowLeft className=\"h-4 w-4 mr-2\" />\n                  Back to Lists\n                </Button>\n              </Link>\n              <div>\n                <h2 className=\"text-3xl font-bold text-gray-900\">Create New List</h2>\n                <p className=\"text-gray-600 mt-2\">\n                  Create a new list to organize your subscribers.\n                </p>\n              </div>\n            </div>\n\n            {actionData?.error && <Card className=\"mb-6 border-red-200 bg-red-50\">\n                <CardContent className=\"p-4\">\n                  <p className=\"text-red-800\">{actionData.error}</p>\n                </CardContent>\n              </Card>}\n\n            <Card>\n              <CardHeader>\n                <CardTitle>List Information</CardTitle>\n                <CardDescription>\n                  Enter the details for your new subscriber list.\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <Form method=\"post\" className=\"space-y-6\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      List Name *\n                    </label>\n                    <Input name=\"name\" placeholder=\"e.g., Newsletter Subscribers, VIP Customers\" required className=\"w-full\" />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Description\n                    </label>\n                    <Textarea name=\"description\" placeholder=\"Describe what this list is for...\" className=\"w-full\" rows={3} />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                      List Color\n                    </label>\n                    <div className=\"grid grid-cols-4 gap-3\">\n                      {colorOptions.map(color => <label key={color.value} className=\"flex items-center space-x-2 cursor-pointer\">\n                          <input type=\"radio\" name=\"color\" value={color.value} defaultChecked={color.value === '#3B82F6'} className=\"sr-only\" />\n                          <div className=\"w-8 h-8 rounded-full border-2 border-gray-300 flex items-center justify-center\" style={{\n                        backgroundColor: color.value\n                      }}>\n                            <div className=\"w-4 h-4 rounded-full bg-white opacity-0 peer-checked:opacity-100\" />\n                          </div>\n                          <span className=\"text-sm text-gray-700\">{color.name}</span>\n                        </label>)}\n                    </div>\n                  </div>\n\n                  <div className=\"flex space-x-4\">\n                    <Button type=\"submit\" disabled={isSubmitting} className=\"flex-1\">\n                      <List className=\"h-4 w-4 mr-2\" />\n                      {isSubmitting ? 'Creating List...' : 'Create List'}\n                    </Button>\n                    \n                    <Link to=\"/lists\" className=\"flex-1\">\n                      <Button variant=\"outline\" className=\"w-full\">\n                        Cancel\n                      </Button>\n                    </Link>\n                  </div>\n                </Form>\n              </CardContent>\n            </Card>\n          </div>\n        </main>\n      </div>\n    </div>;\n}\n_s(NewList, \"1McpCHagYnDxWS8x/PvdytQMqgg=\", false, function () {\n  return [useLoaderData, useActionData, useNavigation];\n});\n_c = NewList;\nvar _c;\n$RefreshReg$(_c, \"NewList\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
