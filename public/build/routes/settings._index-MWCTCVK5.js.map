{
  "version": 3,
  "sources": ["../../../app/routes/settings._index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/settings._index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/settings._index.tsx\");\n  import.meta.hot.lastModified = \"1754586020268.102\";\n}\n// REMIX HMR END\n\nimport { json } from '@remix-run/node';\nimport { Link, useLoaderData } from '@remix-run/react';\nimport { requireAuth } from '~/lib/auth.server';\nimport { Sidebar } from '~/components/layout/sidebar';\nimport { Header } from '~/components/layout/header';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '~/components/ui/card';\nimport { Server, User, Bell, Shield, CreditCard } from 'lucide-react';\nexport async function loader({\n  request\n}) {\n  const user = await requireAuth(request);\n  return json({\n    user\n  });\n}\nexport default function SettingsIndex() {\n  _s();\n  const {\n    user\n  } = useLoaderData();\n  const settingsOptions = [{\n    title: 'SMTP Configuration',\n    description: 'Configure your email sending settings and SMTP servers',\n    icon: Server,\n    href: '/settings/smtp',\n    color: 'bg-blue-50 text-blue-600'\n  }, {\n    title: 'Profile Settings',\n    description: 'Update your personal information and account details',\n    icon: User,\n    href: '/settings/profile',\n    color: 'bg-green-50 text-green-600'\n  }, {\n    title: 'Notifications',\n    description: 'Manage your notification preferences and alerts',\n    icon: Bell,\n    href: '/settings/notifications',\n    color: 'bg-yellow-50 text-yellow-600'\n  }, {\n    title: 'Security',\n    description: 'Password, two-factor authentication, and security settings',\n    icon: Shield,\n    href: '/settings/security',\n    color: 'bg-red-50 text-red-600'\n  }, {\n    title: 'Billing',\n    description: 'Manage your subscription and billing information',\n    icon: CreditCard,\n    href: '/settings/billing',\n    color: 'bg-purple-50 text-purple-600'\n  }];\n  return <div className=\"flex h-screen bg-gray-50\">\n      <Sidebar />\n      \n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        <Header user={user} />\n        \n        <main className=\"flex-1 overflow-y-auto p-6\">\n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"mb-8\">\n              <h2 className=\"text-3xl font-bold text-gray-900\">Settings</h2>\n              <p className=\"text-gray-600 mt-2\">\n                Manage your account settings and preferences.\n              </p>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {settingsOptions.map(option => <Link key={option.href} to={option.href}>\n                  <Card className=\"hover:shadow-lg transition-shadow cursor-pointer\">\n                    <CardHeader>\n                      <div className=\"flex items-center space-x-4\">\n                        <div className={`p-3 rounded-lg ${option.color}`}>\n                          <option.icon className=\"h-6 w-6\" />\n                        </div>\n                        <div>\n                          <CardTitle className=\"text-lg\">{option.title}</CardTitle>\n                          <CardDescription className=\"mt-1\">\n                            {option.description}\n                          </CardDescription>\n                        </div>\n                      </div>\n                    </CardHeader>\n                  </Card>\n                </Link>)}\n            </div>\n\n            {/* Account Information */}\n            <Card className=\"mt-8\">\n              <CardHeader>\n                <CardTitle>Account Information</CardTitle>\n                <CardDescription>\n                  Your current account details\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-600\">Email</label>\n                    <p className=\"text-gray-900\">{user.email}</p>\n                  </div>\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-600\">Account Created</label>\n                    <p className=\"text-gray-900\">\n                      {new Date(user.created_at).toLocaleDateString('en-US', {\n                      year: 'numeric',\n                      month: 'long',\n                      day: 'numeric'\n                    })}\n                    </p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </main>\n      </div>\n    </div>;\n}\n_s(SettingsIndex, \"FpjQZylbefWQChk+MjGNfSb2jDo=\", false, function () {\n  return [useLoaderData];\n});\n_c = SettingsIndex;\nvar _c;\n$RefreshReg$(_c, \"SettingsIndex\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
