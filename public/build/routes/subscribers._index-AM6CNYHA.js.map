{
  "version": 3,
  "sources": ["../../../app/routes/subscribers._index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/subscribers._index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/subscribers._index.tsx\");\n  import.meta.hot.lastModified = \"1754586020268.784\";\n}\n// REMIX HMR END\n\nimport { json } from '@remix-run/node';\nimport { Link, useLoaderData } from '@remix-run/react';\nimport { requireAuth } from '~/lib/auth.server';\nimport { supabase } from '~/lib/supabase.server';\nimport { Sidebar } from '~/components/layout/sidebar';\nimport { Header } from '~/components/layout/header';\nimport { Button } from '~/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '~/components/ui/card';\nimport { Plus, Users, Search } from 'lucide-react';\nimport { Input } from '~/components/ui/input';\nexport async function loader({\n  request\n}) {\n  const user = await requireAuth(request);\n\n  // Get subscribers with their list memberships\n  const {\n    data: subscribers,\n    error\n  } = await supabase.from('subscribers').select(`\n      *,\n      list_subscribers(\n        list_id,\n        status,\n        lists(name, color)\n      )\n    `).eq('user_id', user.id).order('created_at', {\n    ascending: false\n  });\n  if (error) {\n    console.error('Subscribers fetch error:', error);\n    return json({\n      user,\n      subscribers: [],\n      error: 'Failed to load subscribers'\n    });\n  }\n  return json({\n    user,\n    subscribers\n  });\n}\nexport default function Subscribers() {\n  _s();\n  const {\n    user,\n    subscribers,\n    error\n  } = useLoaderData();\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'subscribed':\n        return 'bg-green-100 text-green-800';\n      case 'unsubscribed':\n        return 'bg-red-100 text-red-800';\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n  return <div className=\"flex h-screen bg-gray-50\">\n      <Sidebar />\n      \n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        <Header user={user} />\n        \n        <main className=\"flex-1 overflow-y-auto p-6\">\n          <div className=\"max-w-7xl mx-auto\">\n            <div className=\"flex items-center justify-between mb-8\">\n              <div>\n                <h2 className=\"text-3xl font-bold text-gray-900\">Subscribers</h2>\n                <p className=\"text-gray-600 mt-2\">\n                  Manage your email subscribers and their preferences.\n                </p>\n              </div>\n              \n              <div className=\"flex space-x-3\">\n                <Link to=\"/subscribers/import\">\n                  <Button variant=\"outline\">\n                    <Plus className=\"h-4 w-4 mr-2\" />\n                    Import Subscribers\n                  </Button>\n                </Link>\n                <Link to=\"/subscribers/new\">\n                  <Button>\n                    <Plus className=\"h-4 w-4 mr-2\" />\n                    Add Subscriber\n                  </Button>\n                </Link>\n              </div>\n            </div>\n\n            {error && <Card className=\"mb-6 border-red-200 bg-red-50\">\n                <CardContent className=\"p-4\">\n                  <p className=\"text-red-800\">{error}</p>\n                </CardContent>\n              </Card>}\n\n            {/* Search and Filters */}\n            <Card className=\"mb-6\">\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"flex-1 relative\">\n                    <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                    <Input placeholder=\"Search subscribers by email or name...\" className=\"pl-10\" />\n                  </div>\n                  <Button variant=\"outline\">Filter</Button>\n                </div>\n              </CardContent>\n            </Card>\n\n            {subscribers.length === 0 ? <Card>\n                <CardContent className=\"text-center py-12\">\n                  <Users className=\"h-16 w-16 mx-auto mb-4 text-gray-300\" />\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n                    No subscribers yet\n                  </h3>\n                  <p className=\"text-gray-600 mb-6\">\n                    Start building your audience by adding your first subscriber.\n                  </p>\n                  <div className=\"flex justify-center space-x-3\">\n                    <Link to=\"/subscribers/new\">\n                      <Button>\n                        <Plus className=\"h-4 w-4 mr-2\" />\n                        Add Subscriber\n                      </Button>\n                    </Link>\n                    <Link to=\"/subscribers/import\">\n                      <Button variant=\"outline\">\n                        Import from CSV\n                      </Button>\n                    </Link>\n                  </div>\n                </CardContent>\n              </Card> : <Card>\n                <CardHeader>\n                  <CardTitle>All Subscribers ({subscribers.length})</CardTitle>\n                  <CardDescription>\n                    Manage and view all your email subscribers\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full\">\n                      <thead>\n                        <tr className=\"border-b\">\n                          <th className=\"text-left py-3 px-4 font-medium text-gray-900\">Subscriber</th>\n                          <th className=\"text-left py-3 px-4 font-medium text-gray-900\">Status</th>\n                          <th className=\"text-left py-3 px-4 font-medium text-gray-900\">Lists</th>\n                          <th className=\"text-left py-3 px-4 font-medium text-gray-900\">Subscribed</th>\n                          <th className=\"text-left py-3 px-4 font-medium text-gray-900\">Actions</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {subscribers.map(subscriber => <tr key={subscriber.id} className=\"border-b hover:bg-gray-50\">\n                            <td className=\"py-3 px-4\">\n                              <div>\n                                <div className=\"font-medium text-gray-900\">\n                                  {subscriber.first_name} {subscriber.last_name}\n                                </div>\n                                <div className=\"text-sm text-gray-600\">{subscriber.email}</div>\n                              </div>\n                            </td>\n                            <td className=\"py-3 px-4\">\n                              <span className={`px-2 py-1 text-xs rounded-full ${getStatusColor(subscriber.status)}`}>\n                                {subscriber.status}\n                              </span>\n                            </td>\n                            <td className=\"py-3 px-4\">\n                              <div className=\"flex flex-wrap gap-1\">\n                                {subscriber.list_subscribers?.slice(0, 3).map(ls => <span key={ls.list_id} className=\"inline-flex items-center px-2 py-1 text-xs rounded-full bg-gray-100 text-gray-800\">\n                                    <div className=\"w-2 h-2 rounded-full mr-1\" style={{\n                              backgroundColor: ls.lists?.color || '#gray'\n                            }} />\n                                    {ls.lists?.name || 'Unknown'}\n                                  </span>)}\n                                {subscriber.list_subscribers?.length > 3 && <span className=\"text-xs text-gray-500\">\n                                    +{subscriber.list_subscribers.length - 3} more\n                                  </span>}\n                              </div>\n                            </td>\n                            <td className=\"py-3 px-4 text-sm text-gray-600\">\n                              {formatDate(subscriber.created_at)}\n                            </td>\n                            <td className=\"py-3 px-4\">\n                              <div className=\"flex space-x-2\">\n                                <Link to={`/subscribers/${subscriber.id}`}>\n                                  <Button variant=\"outline\" size=\"sm\">\n                                    View\n                                  </Button>\n                                </Link>\n                                <Link to={`/subscribers/${subscriber.id}/edit`}>\n                                  <Button variant=\"outline\" size=\"sm\">\n                                    Edit\n                                  </Button>\n                                </Link>\n                              </div>\n                            </td>\n                          </tr>)}\n                      </tbody>\n                    </table>\n                  </div>\n                </CardContent>\n              </Card>}\n          </div>\n        </main>\n      </div>\n    </div>;\n}\n_s(Subscribers, \"vmWcdnLsapcySSJOIODr+MLTn1M=\", false, function () {\n  return [useLoaderData];\n});\n_c = Subscribers;\nvar _c;\n$RefreshReg$(_c, \"Subscribers\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
